plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.6.0"
    id "com.matthewprenger.cursegradle" version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
compileKotlin.kotlinOptions.jvmTarget = "17"

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


repositories {
    maven { url = "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    api project(path: ":base", configuration: "namedElements")
    include project(path: ":base", configuration: "namedElements")

    api project(path: ":rei-compat", configuration: "namedElements")
    include project(path: ":rei-compat", configuration: "namedElements")

    api project(path: ":modular-armor", configuration: "namedElements")
    include project(path: ":modular-armor", configuration: "namedElements")

    include project(path: ":vanilla-events", configuration: "namedElements")


    modRuntimeOnly "com.terraformersmc:modmenu:3.0.0"
}

allprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    version = project.mod_version

    repositories {
        maven { url = uri("https://jitpack.io/") }
        maven { url = "https://maven.cafeteria.dev/" }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
        modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

        modApi("com.github.nathanpb:KtDataTagLib:${project.ktdatataglib_version}")
        include("com.github.nathanpb:KtDataTagLib:${project.ktdatataglib_version}")
    }

    jar {
        exclude("**/*.bbmodel")
        exclude("**/*.xcf")
        from "LICENSE"
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishipathng_maven.html for information on how to set up publishing.
    repositories {
        maven {
            url "https://maven.cafeteria.dev/releases"
            credentials {
                username = project.property("mcdUsername")
                password = project.property("mcdPassword")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

curseforge {
    apiKey = project.property("curseforgeToken")
    project {
        id = project.curseforge_id
        changelog = "https://github.com/NathanPB/DeepMobLearning-Refabricated/releases/tag/${URLEncoder.encode(project.minecraft_version + '+' + project.mod_version, "utf-8")}"
        releaseType = project.mod_version.contains('alpha')
            ? 'alpha'
            : project.mod_version.contains('beta')
                ? 'beta'
                : 'release'

        addGameVersion(project.minecraft_version)
        addGameVersion("Fabric")

        mainArtifact(remapJar)  {
            displayName = "Deep Mob Learning: Refabricated $project.minecraft_version+$version"
            relations {
                optionalDependency("roughly-enough-items")
                requiredDependency("fabric-api")
                requiredDependency("fabric-language-kotlin")
            }
        }

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }

    }

    options {
        forgeGradleIntegration = false
    }
}
